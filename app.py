from flask import Flask, render_template, request, jsonify, redirect, url_for, send_from_directory
import json
import os
import smtplib
import re
from datetime import datetime
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

app = Flask(__name__)

# Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
EMAIL_CONFIG = {
    'smtp_server': 'smtp.gmail.com',
    'smtp_port': 587,
    'sender_email': 'ayana05j@gmail.com',
    'sender_password': 'hmmn coac olcl zvgb',  # –ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Gmail
    'sender_name': 'Enactus KSLA'
}

@app.route('/images/<filename>')
def images(filename):
    """–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    return send_from_directory('images', filename)

@app.route('/static/<filename>')
def static_files(filename):
    """–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è CSS –∏ JS —Ñ–∞–π–ª–æ–≤"""
    return send_from_directory('static', filename)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
APPLICATIONS_FILE = 'applications.json'

def load_applications():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∑–∞—è–≤–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
    if os.path.exists(APPLICATIONS_FILE):
        with open(APPLICATIONS_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    return []

def is_valid_email(email):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email –∞–¥—Ä–µ—Å–∞"""
    pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    return re.match(pattern, email) is not None

def send_welcome_email(recipient_email, recipient_name):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = MIMEMultipart()
        msg['From'] = f"{EMAIL_CONFIG['sender_name']} <{EMAIL_CONFIG['sender_email']}>"
        msg['To'] = recipient_email
        msg['Subject'] = "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É Enactus KSLA"
        
        # HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
        html_body = f"""
        <html>
        <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
            <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
                <div style="text-align: center; margin-bottom: 30px;">
                    <h1 style="color: #B22222; margin-bottom: 10px;">–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, {recipient_name}!</h1>
                    <h2 style="color: #666; font-weight: normal;">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É Enactus KSLA!</h2>
                </div>
                
                <div style="background: #f9f9f9; padding: 20px; border-radius: 10px; margin-bottom: 20px;">
                    <p style="margin-bottom: 15px;">–ú—ã —Ä–∞–¥—ã –≤–∞—à–µ–º—É –∏–Ω—Ç–µ—Ä–µ—Å—É –∫ –Ω–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏!</p>
                    <p style="margin-bottom: 15px;">Enactus ‚Äî —ç—Ç–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –≥–¥–µ —Å—Ç—É–¥–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ-–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ–º–±–∏–Ω–∏—Ä—É—è –±–∏–∑–Ω–µ—Å-–º—ã—à–ª–µ–Ω–∏–µ –∏ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—É—é –ø–æ–ª—å–∑—É.</p>
                </div>
                
                <div style="text-align: center; margin: 30px 0;">
                    <p style="font-size: 18px; margin-bottom: 20px;"><strong>–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:</strong></p>
                    <p style="margin-bottom: 20px;">–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥—É:</p>
                    <a href="https://docs.google.com/forms/d/e/1FAIpQLScqZXtD9wmYD7vTsvNDjANmRo-wlLFg_AiGSgrNN_9OdhVlaQ/viewform?fbclid=PAZXh0bgNhZW0CMTEAAacBg3gHgLNkMIffRSy2fm5Yjej3FeeGWldM5eD1uV4bddY0rBD5twryMxs_Lg_aem_88Ks9KBy1tAsZqS5sxy87w" 
                       style="display: inline-block; background: #B22222; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;">
                        –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è
                    </a>
                </div>
                
                <div style="border-top: 1px solid #ddd; padding-top: 20px; margin-top: 30px;">
                    <p style="margin-bottom: 10px;"><strong>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</strong></p>
                    <p style="margin: 5px 0;">üìß Email: ayana05j@gmail.com</p>
                    <p style="margin: 5px 0;">üì± –¢–µ–ª–µ—Ñ–æ–Ω: +996 551 996 106</p>
                    <a href="https://www.instagram.com/enactus_ksla/" style="margin: 5px 0;">üìç Instagram: @enactus_ksla</a>
                </div>
                
                <div style="text-align: center; margin-top: 30px; color: #666; font-size: 14px;">
                    <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Enactus KSLA</p>
                </div>
            </div>
        </body>
        </html>
        """
        
        msg.attach(MIMEText(html_body, 'html', 'utf-8'))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ
        if EMAIL_CONFIG['sender_password']:
            server = smtplib.SMTP(EMAIL_CONFIG['smtp_server'], EMAIL_CONFIG['smtp_port'])
            server.starttls()
            server.login(EMAIL_CONFIG['sender_email'], EMAIL_CONFIG['sender_password'])
            server.send_message(msg)
            server.quit()
            return True
        else:
            print(f"Email –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–∞—Ä–æ–ª—å. –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {recipient_email}")
            return False
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
        return False

def save_application(name, phone, email):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É"""
    applications = load_applications()
    new_application = {
        'id': len(applications) + 1,
        'name': name,
        'phone': phone,
        'email': email,
        'timestamp': datetime.now().isoformat(),
        'status': 'new'
    }
    applications.append(new_application)
    
    with open(APPLICATIONS_FILE, 'w', encoding='utf-8') as f:
        json.dump(applications, f, ensure_ascii=False, indent=2)
    
    return new_application

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return send_from_directory('.', 'index.html')

@app.route('/api/apply', methods=['POST'])
def apply():
    """API –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ"""
    try:
        data = request.get_json()
        name = data.get('name', '').strip()
        phone = data.get('phone', '').strip()
        email = data.get('email', '').strip()
        
        if not name or not phone or not email:
            return jsonify({
                'success': False,
                'message': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è'
            }), 400
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è email
        if not is_valid_email(email):
            return jsonify({
                'success': False,
                'message': '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å'
            }), 400
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É
        application = save_application(name, phone, email)
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ
        email_sent = send_welcome_email(email, name)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        if email_sent:
            message = '–°–ø–∞—Å–∏–±–æ! –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∞–º –ø–∏—Å—å–º–æ —Å –¥–∞–ª—å–Ω–µ–π—à–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π email.'
        else:
            message = '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ü–∏—Å—å–º–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å, –Ω–æ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º.'
        
        return jsonify({
            'success': True,
            'message': message,
            'application_id': application['id'],
            'email_sent': email_sent
        })
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ apply(): {e}")
        return jsonify({
            'success': False,
            'message': '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        }), 500

@app.route('/api/stats')
def stats():
    """API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    applications = load_applications()
    return jsonify({
        'total_applications': len(applications),
        'new_applications': len([app for app in applications if app['status'] == 'new']),
        'members': 120,
        'projects': 18,
        'founded_year': 2012
    })

@app.route('/admin')
def admin():
    """–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫"""
    applications = load_applications()
    email_configured = bool(EMAIL_CONFIG['sender_password'])
    return render_template('admin.html', 
                         applications=applications, 
                         email_configured=email_configured)

@app.route('/email_setup.md')
def email_setup():
    """–û—Ç–¥–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ email"""
    return send_from_directory('.', 'email_setup.md')

@app.route('/api/test-email', methods=['POST'])
def test_email():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É email"""
    try:
        data = request.get_json()
        test_email_addr = data.get('email', '').strip()
        
        if not test_email_addr or not is_valid_email(test_email_addr):
            return jsonify({
                'success': False,
                'message': '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å'
            }), 400
        
        success = send_welcome_email(test_email_addr, '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
        
        return jsonify({
            'success': success,
            'message': '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!' if success else '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞'
        })
        
    except Exception as e:
        return jsonify({
            'success': False,
            'message': f'–û—à–∏–±–∫–∞: {str(e)}'
        }), 500

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)